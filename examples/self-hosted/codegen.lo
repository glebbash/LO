// TODO: implement the module
include "./core.lo"
include "./ast.lo"
include "./wasm.lo"

// TODO: implement
struct CodeGen {
    command: LoCommand,
    fm: &FileManager,
    error_count: u32,
}

fn CodeGen::new(command: LoCommand): &CodeGen {
    return heap::new!(.CodeGen {
        command: command,
        fm: FileManager::new(),
        error_count: 0,
    })
}

fn CodeGen::free(&self) {
    panic!(dbg "todo")
}

fn CodeGen::report_error(&self, err: &LoError) {
    // TODO: implement
}

fn CodeGen::end_inspection(&self) {
    panic!(dbg "todo")
}

fn CodeGen::pass_collect_typedefs(&self, ast: &AST) {
    panic!(dbg "todo")
}

fn CodeGen::pass_build_structs(&self, ast: &AST) {
    panic!(dbg "todo")
}

fn CodeGen::pass_main(&self, ast: &AST) {
    panic!(dbg "todo")
}

fn CodeGen::generate(&self, wasm_module: &WasmModule) {
    panic!(dbg "todo")
}
