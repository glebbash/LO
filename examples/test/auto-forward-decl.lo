export fn main(): u32 {
    // auto forward decl
    let a = .A {
        // auto forward decl
        b: .B {
            x: 42,
            a: 0 as &A,
        },
    };
    // auto forward decl
    return calc_answer(a);
};

// auto forward decl for parameters (including struct values)
fn calc_answer(a: A): u32 {
    return a.b.x;
};

struct B {
    x: u32,
    // auto forward decl (allowed for struct pointers)
    a: &A,
};

struct A {
    // NOTE: structs must be defined before their values can be used
    // TODO?: should this be supported at the cost of extra pass?
    b: B,
};
